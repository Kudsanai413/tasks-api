{
  "todo-tasks": [
    {
      "id": "1",
      "title": "Create Login Component",
      "description": "Create a Fully Functional Login System, that can fetch credentials and responses for the Backend Login API. Therefore Warranting the creation of a Robust Backed Login API.",
      "due_date": "2025-01-19",
      "subList": [
        {
          "id": 1,
          "title": "Create A Beautiful Login Form",
          "done": true
        },
        {
          "id": 2,
          "title": "Create A Backend API",
          "done": false
        },
        {
          "id": 3,
          "title": "Handle and Manage Exceptions",
          "done": true
        },
        {
          "id": 4,
          "title": "Create A User Context",
          "done": true
        }
      ],
      "done": false
    },
    {
      "id": "2",
      "title": "Create A Registration Sub_system",
      "description": "Create A Fully Functional and Manageable Registration System. It should be able to post data to backend and fetch backend response seamlessly, and update the User Context.",
      "due_date": "2025-01-17",
      "subList": [
        {
          "id": 1,
          "title": "Create A Beautiful Register Form",
          "done": true
        },
        {
          "id": 2,
          "title": "Create Registration Details Confirmation Page",
          "done": true
        },
        {
          "id": 3,
          "title": "Create A Register Backend API",
          "done": false
        },
        {
          "id": 4,
          "title": "Handle and Manage Exceptions and Errors",
          "done": true
        }
      ],
      "done": false
    },
    {
      "id": "3",
      "title": "Create A  Dashboard / Home Page",
      "description": "Create A Landing Page for Users. It should be able to make use of the user context info to fetch user specified information from the database. It should also have logic that renders content based on user type  ",
      "due_date": "2025-01-24",
      "subList": [
        {
          "id": 1,
          "title": "( front-end )Create Beautiful Farmer Home Page",
          "done": false
        },
        {
          "id": 2,
          "title": "( front-end ) Create Beautiful Buyer Dashboard",
          "done": false
        },
        {
          "id": 3,
          "title": "Create Statistics Calculator Component",
          "done": false
        },
        {
          "id": 4,
          "title": "Create A Brief History Child Component",
          "done": false
        },
        {
          "id": 5,
          "title": "Create An Elegant Profile Component",
          "done": false
        },
        {
          "id": 6,
          "title": "Create Navigation System ( Tab, Stack, Drawer )",
          "done": false
        }
      ],
      "done": false
    },
    {
      "id": "4",
      "title": "Create Product Components ( Farmer & Buyer )",
      "description": "Create Products Components That allow: \n1. The Farmer To Create Product listing to show Buyers. \n2. The Buyers To Browse Through Product Listing & Act on them.\nThe Components Should Communicate With Backend And Fetch Data. ",
      "due_date": "2025-01-24",
      "subList": [
        {
          "id": 1,
          "title": "Create A Product Listings Creation Component (farmer)",
          "done": false
        },
        {
          "id": 2,
          "title": "Create A Product Listings Browsing Component (farmer)",
          "done": true
        },
        {
          "id": 3,
          "title": "Create A Product Management Page (farmer)",
          "done": false
        },
        {
          "id": 4,
          "title": "Backend API to Fetch Product Info( both )",
          "done": false
        },
        {
          "id": 5,
          "title": "Navigation Link To Messaging Page",
          "done": false
        },
        {
          "id": 6,
          "title": "Product Context",
          "done": true
        }
      ],
      "done": false
    },
    {
      "id": "5",
      "title": "Create The Contract Management Compomnent",
      "description": "Create A Fully Functional Contract management system, that allow creation, updating and termination of contracts between two parties. ",
      "due_date": "2025-01-31",
      "subList": [],
      "done": false
    },
    {
      "id": "6",
      "title": "Create A Messaging Component",
      "description": "Create A Messaging System, that allows the sending of both custom and push messages. It should also allow pop-up and push notification if a message is recieved",
      "due_date": "2025-02-07",
      "subList": [],
      "done": false
    },
    {
      "id": "7",
      "title": "Create History Component",
      "description": "Create A History Page That Shows All The Recorded Activities of the User. The History Includes activities like contracts made, deals and transactions made  ",
      "due_date": "2025-02-14",
      "subList": [],
      "done": false
    },
    {
      "id": "8",
      "title": "Security Measures and Implementation",
      "description": "Identify security threats and build counter measurers, to avoid unauthorized access and confirm eligibility. ",
      "due_date": "2025-02-21",
      "subList": [],
      "done": false
    },
    {
      "id": "10",
      "title": "Create The Harvest-Hub Database",
      "description": "Create The Database That Will Be Deployed To The Server and The Local Database. They Will Users To Access Data both while they are online and offline",
      "due_date": "2025-01-25",
      "subList": [
        {
          "id": 1,
          "title": "Create The Farmers Table",
          "done": false
        },
        {
          "id": 2,
          "title": "CreateThe Buyers Table",
          "done": false
        }
      ],
      "done": false
    },
    {
      "id": "9",
      "title": "HarvestHub Testing",
      "description": "Perform almost all kinds testing of functional and non-functional requirements ",
      "due_date": "2025-02-28",
      "subList": [
        {
          "id": 1,
          "title": "Test The Login Component",
          "done": false
        },
        {
          "id": 2,
          "title": "Test The Register Component",
          "done": false
        },
        {
          "id": 3,
          "title": "Handle and Fix Login &// Register Error and Problems",
          "done": false
        }
      ],
      "done": false
    },
    {
      "id": "11",
      "title": "Testing Todo API",
      "description": "Test If There any Problems Associated with the todo api logic and requests.",
      "due_date": "2025-01-16",
      "subList": [
        {
          "id": 1,
          "title": "hello",
          "done": false
        }
      ],
      "done": false
    }
  ],
  "blogs": [
    {
        "blogger_id": "user7",
        "blogger_name": "Grace",
        "blogger_profile": "https://randomuser.me/api/portraits/women/4.jpg",
        "blog_title": "Why JavaScript is Essential for Web Developers",
        "blog_text": "This is a blog post about why JavaScript is essential for web developers. Here, we explore how to effectively use JavaScript in your projects to create dynamic, interactive websites. JavaScript is one of the core technologies of web development, and understanding its fundamentals is crucial. From manipulating the Document Object Model (DOM) to handling events and making asynchronous requests, JavaScript empowers developers to create responsive, user-friendly applications.",
        "blog_date": "2025-04-01T21:16:12.808019",
        "likes": 103,
        "dislikes": 11,
        "reposts": 65,
        "comments": [
            "Great post, Grace!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    },
    {
        "blogger_id": "user13",
        "blogger_name": "Mona",
        "blogger_profile": "https://randomuser.me/api/portraits/women/7.jpg",
        "blog_title": "Best Practices for Styling in React Native",
        "blog_text": "This is a blog post about best practices for styling in React Native. Here, we explore how to effectively use React Native to create stylish and responsive mobile applications. Styling in React Native can be tricky due to its differences from traditional CSS, but by following best practices, developers can ensure consistency and maintainability. Weâ€™ll cover topics like using Flexbox, modularizing styles, and avoiding inline styles to make your code cleaner and more efficient.",
        "blog_date": "2025-04-01T21:16:12.808047",
        "likes": 279,
        "dislikes": 46,
        "reposts": 23,
        "comments": [
            "Great post, Mona!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    },
    {
        "blogger_id": "user8",
        "blogger_name": "Hank",
        "blogger_profile": "https://randomuser.me/api/portraits/men/4.jpg",
        "blog_title": "JavaScript: The Complete Guide for Modern Web Development",
        "blog_text": "This is a blog post about JavaScript: The complete guide for modern web development. Here we explore how to effectively use JavaScript in your projects. JavaScript has evolved significantly over the years and is now at the forefront of modern web development. From front-end frameworks like React and Vue to back-end technologies such as Node.js, JavaScript is the backbone of the web. This post will guide you through its essentials, modern tools, and techniques to boost your development skills.",
        "blog_date": "2025-04-01T21:16:12.808063",
        "likes": 18,
        "dislikes": 13,
        "reposts": 11,
        "comments": [
            "Great post, Hank!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    },
    {
        "blogger_id": "user7",
        "blogger_name": "Grace",
        "blogger_profile": "https://randomuser.me/api/portraits/women/4.jpg",
        "blog_title": "How to Use Native Modules in React Native",
        "blog_text": "This is a blog post about how to use native modules in React Native. Here we explore how to effectively extend the capabilities of React Native by integrating with native code. Native modules allow developers to access device-specific features such as GPS, camera, or file systems. This guide walks you through the process of creating and using custom native modules in React Native, making your mobile app more powerful and flexible while keeping the codebase manageable.",
        "blog_date": "2025-04-01T21:16:12.808080",
        "likes": 372,
        "dislikes": 46,
        "reposts": 16,
        "comments": [
            "Great post, Grace!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    },
    {
        "blogger_id": "user1",
        "blogger_name": "Alice",
        "blogger_profile": "https://randomuser.me/api/portraits/women/1.jpg",
        "blog_title": "How to Debug React Native Apps Efficiently",
        "blog_text": "This is a blog post about how to debug React Native apps efficiently. Here, we explore various strategies to troubleshoot and resolve issues quickly in your React Native applications. Debugging can be a challenging part of development, but with the right tools and methods, you can minimize downtime and improve your workflow. This post covers techniques like using console logs, React DevTools, remote debugging, and performance profiling to ensure your apps run smoothly.",
        "blog_date": "2025-04-01T21:16:12.808091",
        "likes": 460,
        "dislikes": 35,
        "reposts": 73,
        "comments": [
            "Great post, Alice!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    },
    {
        "blogger_id": "user3",
        "blogger_name": "Charlie",
        "blogger_profile": "https://randomuser.me/api/portraits/men/2.jpg",
        "blog_title": "How to Create Interactive UIs with JavaScript",
        "blog_text": "This is a blog post about how to create interactive UIs with JavaScript. Here, we explore how to use JavaScript to build interactive user interfaces that engage and delight users. JavaScript enables you to manipulate elements dynamically, handle user inputs, and control complex animations. By learning how to integrate JavaScript with HTML and CSS, developers can create responsive and interactive web pages that react to user actions in real time.",
        "blog_date": "2025-04-01T21:16:12.808102",
        "likes": 183,
        "dislikes": 19,
        "reposts": 8,
        "comments": [
            "Great post, Charlie!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    },
    {
        "blogger_id": "user8",
        "blogger_name": "Hank",
        "blogger_profile": "https://randomuser.me/api/portraits/men/4.jpg",
        "blog_title": "Mastering PHP for Backend Development",
        "blog_text": "This is a blog post about mastering PHP for backend development. Here we explore how to effectively use PHP in your projects to build dynamic, data-driven websites and applications. PHP remains one of the most popular server-side languages, and it powers many of the largest websites in the world. This post covers essential concepts like working with databases, handling forms, and managing user sessions to help you become a proficient PHP developer.",
        "blog_date": "2025-04-01T21:16:12.808113",
        "likes": 351,
        "dislikes": 24,
        "reposts": 88,
        "comments": [
            "Great post, Hank!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    },
    {
        "blogger_id": "user14",
        "blogger_name": "Nathan",
        "blogger_profile": "https://randomuser.me/api/portraits/men/7.jpg",
        "blog_title": "Mastering PHP for Backend Development",
        "blog_text": "This is a blog post about mastering PHP for backend development. Here, we explore how to effectively use PHP to build server-side applications that are both secure and scalable. PHP has a vast ecosystem with frameworks like Laravel and Symfony that simplify backend development. This guide will cover topics like database interaction, routing, authentication, and best practices to help you become a PHP backend expert.",
        "blog_date": "2025-04-01T21:16:12.808128",
        "likes": 384,
        "dislikes": 42,
        "reposts": 76,
        "comments": [
            "Great post, Nathan!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    },
    {
        "blogger_id": "user2",
        "blogger_name": "Bob",
        "blogger_profile": "https://randomuser.me/api/portraits/men/1.jpg",
        "blog_title": "How to Get Started with Python: A Beginner's Guide",
        "blog_text": "This is a blog post about how to get started with Python: a beginner's guide. Here, we explore how to effectively use Python for your first programming project. Python is renowned for its simplicity and readability, making it an excellent choice for beginners. This post covers the basic concepts of Python programming, including variables, loops, functions, and data structures, along with tips on how to start building your own projects.",
        "blog_date": "2025-04-01T21:16:12.808213",
        "likes": 465,
        "dislikes": 9,
        "reposts": 14,
        "comments": [
            "Great post, Bob!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    },
    {
        "blogger_id": "user12",
        "blogger_name": "Leo",
        "blogger_profile": "https://randomuser.me/api/portraits/men/6.jpg",
        "blog_title": "Best Practices for React Component Design",
        "blog_text": "This is a blog post about best practices for React component design. Here, we explore how to effectively use React to build reusable, maintainable, and efficient components. Reactâ€™s component-based architecture is powerful, but without proper design, it can lead to inefficient code. This post will guide you through naming conventions, state management, and the importance of keeping components small and focused for better scalability and performance.",
        "blog_date": "2025-04-01T21:16:12.808232",
        "likes": 218,
        "dislikes": 11,
        "reposts": 50,
        "comments": [
            "Great post, Leo!",
            "Very insightful!",
            "I learned a lot from this."
        ]
    }
]
}
